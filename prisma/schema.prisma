generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  user_id       Int           @id @default(autoincrement())
  first_name    String        @db.VarChar(100)
  last_name     String        @db.VarChar(100)
  username      String        @db.VarChar(100)
  image         String?       @default("https://snrrdhiyvhvbhpplnuch.supabase.co/storage/v1/object/public/CAPSTONE/images/09776bb9-94eb-4157-9b5e-dad935353285.jpg")
  phone_number  String        @db.VarChar(12)
  id_card       String        @db.VarChar(17) @unique
  email         String        @unique @db.VarChar(255)
  password      String        @db.VarChar(255)
  role          String        @db.VarChar
  bookmark      bookmark[]
  contact       contact[]
  experience    experience[]
  history       history[]
  post          post[]
  rep           rep[]
  OTP           OTP[]
  wallet        wallet[]
  work          work[]
  rating_com1   rating_com[]  @relation("ratings_com_given")
  rating_com2   rating_com[]  @relation("ratings_com_received")
  rating_user1  rating_user[] @relation("ratings_given")
  rating_users2 rating_user[] @relation("ratings_received")
  user_career   user_career[]
  order1        order[]       @relation("company")
  order2        order[]       @relation("user")
  transfer1     transfer[]       @relation("company")
  transfer2     transfer[]       @relation("user")
}

model rating_user {
  rating_id         Int   @id @default(autoincrement())
  job_id            Int
  friendly_rating   Int @default(0)
  efficiency_rating Int @default(0)
  accuracy_rating   Int @default(0)
  user_id1          Int
  user_id2          Int
  comment           String @db.Text
  job               job   @relation(fields: [job_id], references: [job_id])
  user1             user  @relation("ratings_given", fields: [user_id1], references: [user_id])
  user2             user  @relation("ratings_received", fields: [user_id2], references: [user_id])
}

model rating_com {
  rating_id          Int   @id @default(autoincrement())
  job_id             Int
  friendly_rating    Int   @default(0)
  value_rating       Int   @default(0)
  user_id1           Int
  user_id2           Int
  job                job   @relation(fields: [job_id], references: [job_id])
  user1              user  @relation("ratings_com_given", fields: [user_id1], references: [user_id])
  user2              user  @relation("ratings_com_received", fields: [user_id2], references: [user_id])
}

model contact {
  contact_id Int    @id @default(autoincrement())
  user_id    Int
  facebook   String
  instagram  String
  linkedin   String
  user       user   @relation(fields: [user_id], references: [user_id])
}

model category {
  category_id Int          @id @default(autoincrement())
  name        String
  experiences experience[]
  job_exp     job_exp[]
}

model experience {
  user_id     Int
  category_id Int
  category    category @relation(fields: [category_id], references: [category_id])
  user        user     @relation(fields: [user_id], references: [user_id])

  @@unique([user_id, category_id])
}

model career {
  career_id   Int           @id @default(autoincrement())
  name        String
  user_career user_career[]
}

model user_career {
  user_id   Int
  career_id Int
  career    career @relation(fields: [career_id], references: [career_id])
  user      user   @relation(fields: [user_id], references: [user_id])

  @@unique([user_id, career_id])
}

model job {
  job_id         Int           @id @default(autoincrement())
  title          String
  description    String
  budget         Int
  type           String        @db.VarChar(9)
  posted_date    DateTime      @default(now())
  submitted_date DateTime?
  status         String        @default("Incomplete") @db.VarChar(20)
  mass           Int?          @default(0)
  bookmark       bookmark[]
  history        history[]
  job_exp        job_exp[]
  post           post[]
  order          order[]
  transfer       transfer[]
  rating_com     rating_com[]
  rating_user    rating_user[]
  work           work[]
}

model history {
  user_id Int
  job_id  Int
  status  String @default("Considering")
  job     job    @relation(fields: [job_id], references: [job_id])
  user    user   @relation(fields: [user_id], references: [user_id])
  @@unique([user_id, job_id])
}

model job_exp {
  job_id      Int
  category_id Int
  category    category @relation(fields: [category_id], references: [category_id])
  job         job      @relation(fields: [job_id], references: [job_id])

  @@unique([job_id, category_id])
}

model bookmark {
  user_id Int
  job_id  Int
  book_id Int  @id @default(autoincrement())
  job     job  @relation(fields: [job_id], references: [job_id])
  user    user @relation(fields: [user_id], references: [user_id])

  @@unique([user_id, job_id])
}

model post {
  job_id  Int
  user_id Int
  job     job  @relation(fields: [job_id], references: [job_id])
  user    user @relation(fields: [user_id], references: [user_id])
  @@unique([user_id, job_id])
}

model OTP {
  otp_id  Int  @id @default(autoincrement())
  user_id Int
  OTP     String @db.VarChar(6) @unique
  user    user @relation(fields: [user_id], references: [user_id])
}

model work {
  job_id    Int
  user_id   Int
  work_link String
  job       job     @relation(fields: [job_id], references: [job_id])
  user      user    @relation(fields: [user_id], references: [user_id])
  @@unique([user_id, job_id])
}

model order{
  order_id       String        @db.VarChar(255) @unique
  user_id1       Int
  user_id2       Int
  job_id         Int
  amount         Int
  product_name   String
  product_mass   Int?
  session_id     String        @unique
  date           DateTime      @default(now())
  status         String?
  job            job           @relation(fields: [job_id], references: [job_id])
  user1          user          @relation("company",fields: [user_id1], references: [user_id])
  user2          user          @relation("user",fields: [user_id2], references: [user_id])
}

model product {
  product_id     Int           @id @default(autoincrement())
  name           String        @db.VarChar(255) @unique
  price          Int
  mass           Int
}

model wallet {
   wal_id         String        @db.VarChar(255) @unique
   card_number    String        @db.VarChar(16)
   user_id        Int
   user           user          @relation(fields: [user_id], references: [user_id])
}

model rep {
  rep_id          String        @db.VarChar(255) @unique
  user_id         Int 
  brand           String        @db.VarChar(20)
  card_number     String        @db.VarChar(16)
  created_date    DateTime      @default(now())
  user            user          @relation(fields: [user_id], references: [user_id])
}

model transfer {
  transfer_id       String        @db.VarChar(255) @unique
  user_id1       Int
  user_id2       Int
  job_id         Int
  amount         Int
  product_name   String
  session_id     String        @unique
  date           DateTime      @default(now())
  job            job           @relation(fields: [job_id], references: [job_id])
  user1          user          @relation("company",fields: [user_id1], references: [user_id])
  user2          user          @relation("user",fields: [user_id2], references: [user_id])
}